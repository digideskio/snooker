"use strict";angular.module("app",["ngRoute","ngAnimate","ui.bootstrap"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/home.html"}).when("/rules",{templateUrl:"views/rules.html"}).when("/new",{templateUrl:"views/new-game.html",controller:"NewGameCtrl"}).when("/game",{templateUrl:"views/game.html"}).when("/game/score/:playerId",{templateUrl:"views/score.html",controller:"ScoreCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("app").controller("NewGameCtrl",["$scope","Game",function(a,b){a.addPlayer=function(){b.addPlayer(a.playerName,a.targetScore),a.playerName="",a.targetScore=31},a.removePlayer=function(a){b.removePlayer(a)},a.shufflePlayers=function(){b.shufflePlayers()},a.resetGame=function(){b.reset()},a.players=b.players,a.playerName="",a.targetScore=31}]),angular.module("app").controller("WinnerModalCtrl",["$scope","$modalInstance","winner",function(a,b,c){a.winner=c,a.ok=function(){b.dismiss("Game over")}}]),angular.module("app").controller("ScoreCtrl",["$scope","$routeParams","$modal","$location","Game",function(a,b,c,d,e){var f=parseInt(b.playerId),g=e.players[f];a.player=g,e.setCurrentPlayerId(f),a.isWinner=function(){return g.score===g.target},a.goToNextPlayer=function(){d.path("/game/score/"+e.getNextPlayerId())},a.declareWinner=function(){e.incrementTarget(f),d.path("/new"),c.open({templateUrl:"views/_winner-modal.html",controller:"WinnerModalCtrl",resolve:{winner:function(){return a.player}}})},a.canon=function(){e.canon(f)},a.yellow=function(){e.yellow(f)},a.green=function(){e.green(f)},a.blue=function(){e.blue(f)},a.pink=function(){e.pink(f)},a.black=function(){e.black(f)},a.brown=function(){e.brown(f)},a.foul=function(){e.foul(f)}}]),angular.module("app").factory("Game",function(){var a=JSON.parse(localStorage.getItem("snookerGame")),b={players:a?a.players:[],currentPlayerId:a?a.currentPlayerId:0,addPlayer:function(a,b){this.players.push({name:a,target:b,score:0}),this.persist()},removePlayer:function(a){this.players.splice(a,1),this.persist()},setCurrentPlayerId:function(a){this.currentPlayerId=a,this.persist()},getNextPlayerId:function(){var a=this.currentPlayerId+1;return a<this.players.length?a:0},shufflePlayers:function(){for(var a=this.players.length-1;a>0;a--){var b=Math.floor(Math.random()*(a+1)),c=this.players[a];this.players[a]=this.players[b],this.players[b]=c}this.persist()},incrementTarget:function(a){this.players[a].target+=10,this.persist()},canon:function(a){this.addScoreToPlayer(2,a)},yellow:function(a){this.addScoreToPlayer(2,a)},green:function(a){this.addScoreToPlayer(3,a)},blue:function(a){this.addScoreToPlayer(5,a)},pink:function(a){this.addScoreToPlayer(6,a)},black:function(a){this.addScoreToPlayer(7,a)},brown:function(a){this.resetPlayerScore(a)},foul:function(a){this.resetPlayerScore(a)},addScoreToPlayer:function(a,b){this.players[b].score+=a,this.players[b].score>this.players[b].target&&this.resetPlayerScore(b),this.persist()},resetPlayerScore:function(a){this.players[a].score=0,this.persist()},reset:function(){this.currentPlayerId=0,angular.forEach(this.players,function(a){a.score=0})},persist:function(){localStorage.setItem("snookerGame",angular.toJson({updatedAt:(new Date).getTime(),players:this.players,currentPlayerId:this.currentPlayerId}))}};return b}),angular.module("app").directive("scoreboard",function(){return{restrict:"E",templateUrl:"views/_scoreboard.html",scope:{leadText:"=lead"},controller:["$scope","$location","Game",function(a,b,c){a.currentPlayerId=c.currentPlayerId,a.players=c.players,a.scorePlayer=function(a){b.path("/game/score/"+a)}}]}});